--- interfaces/car.h	2013-04-22 16:26:18.689378225 +0200
+++ interfaces/car.h	2013-03-29 11:47:29.530815000 +0100
@@ -309,6 +309,7 @@
 	float   smoke;
     t3Dd	normal;
     t3Dd	collpos;        /**< Collision position, useful for sound*/
+    int     fakeDammage;    
     int		dammage;
     int		debug;
 	tCollisionState collision_state; /**< collision state */
@@ -336,6 +337,7 @@
 #define _skid		priv.skid
 #define _reaction	priv.reaction
 #define _dammage	priv.dammage
+#define _fakeDammage    priv.fakeDammage
 
 /** Info returned by driver during the race */
 typedef struct {
@@ -345,6 +347,9 @@
     tdble	clutchCmd;  /**< Clutch command [0.0, 1.0] */
     int		gear;  	    /**< [-1,6] for gear selection */
     int		raceCmd;    /**< command issued by the driver */
+    int     focusCmd;//ML Requested focus angle
+    tdble   focusCD;//ML Remaining CoolDown: the point in time when focus sensors can be read again
+
 #define RM_CMD_NONE		0	/**< No race command */
 #define RM_CMD_PIT_ASKED	1	/**< Race command: Pit asked */
     char	msg[4][32];     /**< 4 lines of 31 characters 0-1 from car 2-3 from race engine */
@@ -364,6 +369,10 @@
 #define _msgColorCmd	ctrl.msgColor
 #define _lightCmd	ctrl.lightCmd
 
+#define _focusCmd   ctrl.focusCmd   //ML Focus angle desired by client [degrees]
+#define _focusCD    ctrl.focusCD    //ML Point of time when cooldown on focus sensors expires and sensors can be read again
+
+
 struct RobotItf;
 
 /** Command issued by the car during pit stop */
@@ -394,6 +403,8 @@
     tCarPitCmd		pitcmd;	/**< private */
     struct RobotItf	*robot;	/**< private */
     struct CarElt	*next;
+    int         RESTART;
+    int         RESET;    
 } tCarElt;
 
 
