# list (coma separated) of sizes of consecutive hidden layers
hiddenLayerSizes = 7,7,7

# [0-1]: probability of mutation for single chromosome (edge weight in this case)
mutationProbability = 0.015
# should lerp crossover use one and the same random value for all edges, or should it reroll for each edge
crossoverCommonLerpRandom = false

# torcs will run for populationSize*generations simulations
populationSize = 35
generations = 6000
# elite doesn't mutate. Leading first #elite specimen are copied directly
elite = 5


# maximum number of steps for simulation to start. default is 0
maxSteps = 3000
stagnationReplacement = false
offroadKill = true
# - distance - simple above linear score rewarding farthest riding vehicles
# - steady - modified distance - more penalized offroad, smaller distance impact and penalizes wobbling and RPM abnormalities
score = steady
# gearbox scoring for smoothing:
# - magnitude - counts actions where steering is bigger than magnitude, penalizes high share of steering actions
# - differential - calculates average difference between steering commands, favouring gentle turns
# - differential2 - slightly changed 'dewobbling' formula
steerPenaltyMode = differential2
# differential penalty model: https://www.geogebra.org/graphing/htucpryd

# after learning serialized networks will be serialized to file in format 'data/{filePrefix}-GEN-IDX.dat'
# where GEN will be replace by generation number, IDX by specimen idx
filePrefix = 777-v2/tanh/777-v2
# will override previous generation with sorted one
# if false - creates *-sorted file (best one first)
sortedOverride = true
# starting generation. will try to start from file e.g. 'nn-4.dat'
# existing files will be overridden. Files "*-cmpl.dat" are created when bot shuts down - that's a safety mechanism
# so that killing a bot won't override files by accident
startGeneration = 229

# activation function for neuron. One of: ReLu, tanh
activation = tanh
softmaxOutput = false